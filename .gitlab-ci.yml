default:
  image: node:latest
  tags:
    - radicalgeek-dev-cluster-runner
  before_script:
    - npm ci --cache .npm --prefer-offline
    - |
      {
        echo "@${CI_PROJECT_ROOT_NAMESPACE}:registry=${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/npm/"
        echo "${CI_API_V4_URL#https?}/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=\${CI_JOB_TOKEN}"
      } | tee -a .npmrc
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .npm/

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH

variables:
  NPM_TOKEN: ${CI_JOB_TOKEN}

stages:
  - release

publish:
  stage: release
  script:
    - 'which git || ( apk --no-cache add git )'
    - git fetch --tags origin main:main
    - |
      if [ -z "$(git tag)" ]; then
        latest_tag="1.0.0"
        echo "No tags found. Defaulting to $latest_tag."
      else
        latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1))
        if git rev-parse refs/tags/$latest_tag >/dev/null 2>&1; then
            echo "Tag $latest_tag exists."
        else
            echo "Tag $latest_tag does not exist. Defaulting to 1.0.0."
            latest_tag="1.0.0"
        fi
      fi
    - latest_major=$(echo $latest_tag | cut -d'.' -f1)
    - latest_minor=$(echo $latest_tag | cut -d'.' -f2)
    - |
      if [ "$latest_major" != "$MAJOR_VERSION" ]; then
          MINOR_VERSION=0
      else
          MINOR_VERSION=$((latest_minor+1))
      fi
    - PATCH_VERSION=$(git rev-list refs/tags/$latest_tag..HEAD --count)
    - FULL_VERSION="$MAJOR_VERSION.$MINOR_VERSION.$PATCH_VERSION"
    - git tag $FULL_VERSION
    - git push https://gitlab-ci-token:${ACCESS_TOKEN}@gitlab.radicalgeek.co.uk/trigbagger/lib/service-chassis.git --tags
    - npm version $FULL_VERSION --no-git-tag-version
    - npm publish --registry=${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/npm/
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
